/* Database: decajondb
 * Script: decajon_create_tables.sql
 * Description: craetes all necessary tables for decajon database
 **/

-- Create Users table
CREATE TABLE users(
	id SERIAL NOT NULL PRIMARY KEY,
	email VARCHAR(255) UNIQUE NOT NULL,
	password VARCHAR(255) NOT NULL,
	name VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Groups Table
CREATE TABLE groups(
	id SERIAL NOT NULL PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	description VARCHAR(255) NOT NULL,
	owner_id INT NOT NULL REFERENCES users(id) ON DELETE SET NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Genres Table
CREATE TABLE genres(
	id SERIAL NOT NULL PRIMARY KEY,
	group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
	genre VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Artists Table
CREATE TABLE artists(
	id SERIAL NOT NULL PRIMARY KEY,
	group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
	artist VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Songs Table
CREATE TABLE songs(
	id SERIAL NOT NULL PRIMARY KEY,
	group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
	genre_id INT NOT NULL REFERENCES genres(id) ON DELETE CASCADE,
	artist_id INT NOT NULL REFERENCES artists(id) ON DELETE CASCADE,
	title VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create UsersGroups Table
CREATE TABLE usersgroups(
	id SERIAL NOT NULL PRIMARY KEY,
	user_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
	group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create UsersSongs Table
CREATE TABLE userssongs(
	id SERIAL NOT NULL PRIMARY KEY,
	user_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
	group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
	song_id INT NOT NULL REFERENCES songs(id) ON DELETE CASCADE,
	performance INT NOT NULL DEFAULT 0,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Repertoires Table
CREATE TABLE repertoires(
    id SERIAL NOT NULL PRIMARY KEY,
    group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
    song_id INT NOT NULL REFERENCES songs(id) ON DELETE CASCADE,
    quality INT,
    tone VARCHAR(255),
    comment VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
